package testing;

class A {
    protected int x;
    protected void f() {}
    protected static String name = "Ku-Ku";
}

class B extends A {
    public void someFunc() {
        x = 10; //Доступ к защищённому члену родительского класса
        f();
        A ref = new A();
        ref.x = 13; //В контексте дочернего класса отношение к защищённым членам ЗАПРЕЩЕНО (приведет к ошибке компиляции)
        String bebe = A.name; //Статические переменные - не исключение
    }
}

class C {
    public void someFunc() {
        String mmm = A.name; //Неверный вызов. Переменная name - защищена и не видна извне (Только если класс С находится в другом пакете. Если класс С находится в том же пакете, что и А, то переменная name будет доступна)
        A a = new A();
        int myX = a.x; //Неверный вызов. Переменная x - не видна извне (Только если класс С находится в другом пакете.
        // Если класс С находится в том же пакете, что и А, то переменная х будет доступна)
        a.x = 1; //Неверный вызов. Переменная x - не видна извне (Только если класс С находится в другом пакете. Если класс С находится в том же пакете, что и А, то переменная х будет доступна)
        a.f(); //Неверный вызов. Функция f - не видна извне (Только если класс С находится в другом пакете. Если класс С находится в том же пакете, что и А, то функция f будет доступна)
    }
}